import exploits
import inspect
import logging

l = logging.getLogger("aegg.exploiter.")


class Exploiter(object):
    def __init__(self):
        self.exploits = inspect.getmembers(exploits, predicate=inspect.isclass)
        self.exploits = [e[1] for e in self.exploits]

    def generate(self, path, analysis):
        for exploit in self.exploits:
            exp = exploit(path, analysis)
            l.info('Test exploit: %s ...' % exp.__class__.__name__)
            while True:
                if exp.exploitable():
                    l.debug('payload: %s' % repr(exp.payload))
                    yield exp.payload
                if not exp.gen_next():
                    break
        l.info('... done.')
        yield ''

